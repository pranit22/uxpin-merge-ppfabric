{
  "categorizedComponents": [
    {
      "components": [
        {
          "documentation": {
            "examples": [
              {
                "code": "<PPHeader />"
              }
            ]
          },
          "info": {
            "dirPath": "src/PPHeader",
            "documentation": {
              "path": "src/PPHeader/PPHeader.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/PPHeader/PPHeader.jsx"
            },
            "presets": [
              {
                "path": "src/PPHeader/presets/0-default.jsx"
              }
            ]
          },
          "name": "PPHeader",
          "presets": [
            {
              "elements": {
                "ppheader1": {
                  "name": "PPHeader",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "ppheader1"
            }
          ],
          "properties": [
            {
              "defaultValue": {
                "value": 1440
              },
              "description": "",
              "isRequired": false,
              "name": "width",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "defaultValue": {
                "value": "Console"
              },
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customName": "TitleMenu",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "hasExtensionMenu",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customName": "TitleClick",
              "description": "",
              "isRequired": false,
              "name": "titleCallback",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "userInfo detail object",
              "customName": "UserInfo",
              "defaultValue": {
                "value": {
                  "Country": "US",
                  "Department": "foo",
                  "Desk": "10.2.350",
                  "DisplayName": "User, Guest",
                  "Email": "guest@paypal.com",
                  "GivenName": "Guest",
                  "Location": "San Jose - North",
                  "Title": "Grand Poobah",
                  "sub": "guest"
                }
              },
              "description": "",
              "isRequired": false,
              "name": "userInfo",
              "type": {
                "name": "shape",
                "structure": {
                  "Country": {
                    "name": "string",
                    "structure": {}
                  },
                  "Department": {
                    "name": "string",
                    "structure": {}
                  },
                  "Desk": {
                    "name": "string",
                    "structure": {}
                  },
                  "DisplayName": {
                    "name": "string",
                    "structure": {}
                  },
                  "Email": {
                    "name": "string",
                    "structure": {}
                  },
                  "GivenName": {
                    "name": "string",
                    "structure": {}
                  },
                  "Location": {
                    "name": "string",
                    "structure": {}
                  },
                  "Title": {
                    "name": "string",
                    "structure": {}
                  },
                  "sub": {
                    "name": "string",
                    "structure": {}
                  }
                }
              }
            },
            {
              "customName": "Search",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "hasSearch",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customName": "SearchClick",
              "description": "",
              "isRequired": false,
              "name": "searchCallback",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customName": "NotifButton",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "hasNotificationButton",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customName": "NotifBadge",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "hasNotification",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customName": "NotificationClick",
              "description": "",
              "isRequired": false,
              "name": "notificationCallback",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customName": "Info",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "hasHelpButton",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customName": "InfoClick",
              "description": "",
              "isRequired": false,
              "name": "helpCallback",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customName": "Feedback",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "hasFeedbackButton",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customName": "FeedbackClick",
              "description": "",
              "isRequired": false,
              "name": "feedbackCallback",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customName": "Persona",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "hasPersonaButton",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customName": "PersonaClick",
              "description": "",
              "isRequired": false,
              "name": "personaCallback",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customName": "ContextBar",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "hasContextBar",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "type:id collection for context breadcrumb",
              "customName": "Context",
              "defaultValue": {
                "value": []
              },
              "description": "",
              "isRequired": false,
              "name": "extensionContext",
              "type": {
                "name": "typedArray",
                "structure": {
                  "memberType": {
                    "name": "shape",
                    "structure": {
                      "id": {
                        "name": "string",
                        "structure": {}
                      },
                      "type": {
                        "name": "string",
                        "structure": {}
                      }
                    }
                  }
                }
              }
            },
            {
              "customName": "ContextName",
              "defaultValue": {
                "value": "Foo"
              },
              "description": "",
              "isRequired": false,
              "name": "extensionName",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customName": "ContextHomeClick",
              "description": "",
              "isRequired": false,
              "name": "homeCallback",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customName": "ContextHelpClick",
              "description": "",
              "isRequired": false,
              "name": "extensionDocCallback",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": []
          },
          "info": {
            "dirPath": "src/PPProfileCard",
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/PPProfileCard/PPProfileCard.jsx"
            },
            "presets": [
              {
                "path": "src/PPProfileCard/presets/0-default.jsx"
              }
            ]
          },
          "name": "PPProfileCard",
          "presets": [
            {
              "elements": {
                "ppprofilecard1": {
                  "name": "PPProfileCard",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "ppprofilecard1"
            }
          ],
          "properties": [
            {
              "customDescription": "Whether to display the control",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "open",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The URL to an image file. Leave empty to display initials instead.",
              "customName": "Img URL",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 6
                }
              },
              "defaultValue": {
                "value": "https://static2.sharepointonline.com/files/fabric/office-ui-fabric-react-assets/persona-female.png"
              },
              "description": "",
              "isRequired": false,
              "name": "imageUrl",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The user's presence status",
              "customName": "Presence",
              "defaultValue": {
                "value": "online"
              },
              "description": "Requires a proprietary PayPal prop name, or else things get screwy.",
              "isRequired": false,
              "name": "ppPresence",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "none"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "online"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "offline"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "away"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "busy"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "dnd"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "blocked"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "If no image, the color of the 'coin' showing the user's initials",
              "customName": "Initials Color",
              "defaultValue": {
                "value": "darkBlue"
              },
              "description": "Requires a proprietary PayPal prop name, or else things get screwy",
              "isRequired": false,
              "name": "ppInitialsColor",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "green"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "darkGreen"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "teal"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "lightBlue"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "blue"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "darkBlue"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "violet"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "purple"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "magenta"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "lightPink"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "pink"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "burgundy"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "lightRed"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "darkRed"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "orange"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "rust"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "gold"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "warmGray"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "coolGray"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "If no image, the initials to display on the 'coin'",
              "customName": "Initials",
              "defaultValue": {
                "value": "AL"
              },
              "description": "",
              "isRequired": false,
              "name": "initials",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The full name for this persona",
              "customName": "Name",
              "defaultValue": {
                "value": "Annie Lindqvist"
              },
              "description": "",
              "isRequired": false,
              "name": "name",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "This persona's role; displayed under their name",
              "customName": "Role",
              "defaultValue": {
                "value": "Software Engineer"
              },
              "description": "",
              "isRequired": false,
              "name": "role",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "This persona's email address",
              "defaultValue": {
                "value": "alindqvist@paypal.com"
              },
              "description": "",
              "isRequired": false,
              "name": "email",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The list of communication action items. Put each item on a separate line. Use this pattern: icon(IconName) Action Text",
              "customName": "Action Items",
              "customType": {
                "name": "codeeditor",
                "structure": {}
              },
              "defaultValue": {
                "value": "icon(Email) Send email\nicon(BubbleUser) Teams chat\nicon(Chat) Slack\nicon(CircleInfo) "
              },
              "description": "",
              "isRequired": false,
              "name": "items",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The control's display direction",
              "defaultValue": {
                "value": "bottomAutoEdge"
              },
              "description": "",
              "isRequired": false,
              "name": "direction",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "topLeftEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "topCenter"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "topRightEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "topAutoEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottomLeftEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottomCenter"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottomRightEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottomAutoEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "leftTopEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "leftCenter"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "leftBottomEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "rightTopEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "rightCenter"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "rightBottomEdge"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "Whether to show the light blue target marker on the canvas",
              "customName": "Show Marker",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "showMarker",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when one of the CommandBar buttons is clicked on",
              "customName": "Click",
              "description": "",
              "isRequired": false,
              "name": "onClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        }
      ],
      "name": "PayPal"
    },
    {
      "components": [
        {
          "documentation": {
            "examples": [
              {
                "code": "<ActionButton text=\"foo\" iconName=\"Dictionary\"/>"
              }
            ]
          },
          "info": {
            "dirPath": "src/ActionButton",
            "documentation": {
              "path": "src/ActionButton/ActionButton.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/ActionButton/ActionButton.jsx"
            },
            "presets": [
              {
                "path": "src/ActionButton/presets/0-default.jsx"
              }
            ]
          },
          "name": "ActionButton",
          "presets": [
            {
              "elements": {
                "actionbutton1": {
                  "name": "ActionButton",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "actionbutton1"
            }
          ],
          "properties": [
            {
              "customDescription": "The displayed text on the button (Optional)",
              "customName": "Text",
              "defaultValue": {
                "value": "Basic Action Button"
              },
              "description": "",
              "isRequired": false,
              "name": "text",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library (Optional)",
              "customName": "Icon Name",
              "defaultValue": {
                "value": "Launch"
              },
              "description": "",
              "isRequired": false,
              "name": "iconName",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The location to display an icon, if one is set",
              "customName": "Icon Position",
              "description": "",
              "isRequired": false,
              "name": "iconPosition",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "start"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "end"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "To disable the control",
              "customName": "Disabled",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the button is clicked on",
              "customName": "Click",
              "description": "",
              "isRequired": false,
              "name": "onClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<Button text=\"Primary Button\" />"
              }
            ]
          },
          "info": {
            "dirPath": "src/Button",
            "documentation": {
              "path": "src/Button/Button.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Button/Button.jsx"
            },
            "presets": [
              {
                "path": "src/Button/presets/0-default.jsx"
              }
            ]
          },
          "name": "Button",
          "presets": [
            {
              "elements": {
                "button1": {
                  "name": "Button",
                  "props": {
                    "style": {
                      "width": "100%"
                    }
                  }
                }
              },
              "name": "default",
              "rootId": "button1"
            }
          ],
          "properties": [
            {
              "customDescription": "The displayed text on the button",
              "customName": "Text",
              "defaultValue": {
                "value": "Basic Button"
              },
              "description": "",
              "isRequired": false,
              "name": "text",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To display the button in the filled style. Otherwise, displays in the outline style",
              "customName": "Primary Style",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "primary",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library (Optional)",
              "customName": "Icon Name",
              "description": "",
              "isRequired": false,
              "name": "iconName",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To disable the control",
              "customName": "Disabled",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The location to display an icon, if one is set",
              "customName": "Icon Position",
              "description": "",
              "isRequired": false,
              "name": "iconPosition",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "start"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "end"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "Sets whether to display the button in the rounded PayPal UI style.",
              "customName": "Rounded",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "rounded",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the button is clicked on.",
              "customName": "Click",
              "description": "",
              "isRequired": false,
              "name": "onClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<Checkbox label=\"Standard checkbox\" />"
              }
            ]
          },
          "info": {
            "dirPath": "src/Checkbox",
            "documentation": {
              "path": "src/Checkbox/Checkbox.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Checkbox/Checkbox.jsx"
            },
            "presets": [
              {
                "path": "src/Checkbox/presets/0-default.jsx"
              }
            ]
          },
          "name": "Checkbox",
          "presets": [
            {
              "elements": {
                "checkbox1": {
                  "name": "Checkbox",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "checkbox1"
            }
          ],
          "properties": [
            {
              "customDescription": "To display the box before the start or after end of the text.",
              "customName": "Box Side",
              "defaultValue": {
                "value": "start"
              },
              "description": "",
              "isRequired": false,
              "name": "boxSide",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "start"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "end"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "The checked state of the control.",
              "customName": "Checked",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "isChecked",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "To disable the control",
              "customName": "Disabled",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The displayed text for the checkbox",
              "customName": "Text",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 3
                }
              },
              "defaultValue": {
                "value": "Basic Checkbox"
              },
              "description": "",
              "isRequired": false,
              "name": "label",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the checked state changes.",
              "customName": "Value Change",
              "description": "",
              "isRequired": false,
              "name": "onChange",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<ChoiceGroup className=\"defaultChoiceGroup\" defaultSelectedKey=\"B\" options={[\n            {\n                key: 'A',\n                text: 'Option A',\n                'data-automation-id': 'auto1'\n            },\n            {\n                key: 'B',\n                text: 'Option B'\n            },\n            {\n                key: 'C',\n                text: 'Option C',\n                disabled: true\n            },\n            {\n                key: 'D',\n                text: 'Option D',\n                disabled: true\n            }\n        ]} label=\"Pick one\" required={true}/>"
              }
            ]
          },
          "info": {
            "dirPath": "src/ChoiceGroup",
            "documentation": {
              "path": "src/ChoiceGroup/ChoiceGroup.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/ChoiceGroup/ChoiceGroup.jsx"
            },
            "presets": [
              {
                "path": "src/ChoiceGroup/presets/0-default.jsx"
              }
            ]
          },
          "name": "ChoiceGroup",
          "presets": [
            {
              "elements": {
                "choicegroup1": {
                  "name": "ChoiceGroup",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "choicegroup1"
            }
          ],
          "properties": [
            {
              "customDescription": "The label for the options",
              "customName": "Label",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 2
                }
              },
              "defaultValue": {
                "value": "Basic ChoiceGroup"
              },
              "description": "",
              "isRequired": false,
              "name": "label",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To display the 'required' flag on the label",
              "customName": "Required",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "required",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The list of options. Put each option on a separate line. Enclose an item in quotes to include a comma within it.  For tiled choices, check the Tiled property and add an icon(IconName) at the start of each line.",
              "customName": "Items",
              "customType": {
                "name": "codeeditor",
                "structure": {}
              },
              "defaultValue": {
                "value": "Apples\nBananas\n\"I love you, Grapes!\"\nKiwis\nOranges"
              },
              "description": "",
              "isRequired": false,
              "name": "items",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To display the choices as icon tiles",
              "customName": "Tiled",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "tiled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The 1-based index value of the default item to be shown as selected (Optional)",
              "customName": "Selected Index",
              "defaultValue": {
                "value": 1
              },
              "description": "",
              "isRequired": false,
              "name": "selectedIndex",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the checked state changes.",
              "customName": "Value Change",
              "description": "",
              "isRequired": false,
              "name": "onChange",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<ComboBox \n    multiSelect\n    uxpId=\"ComboBox1\"\n    defaultSelectedKey=\"Banana\"\n    label=\"ComboBox label\" \n    allowFreeform \n    autoComplete=\"on\" \n    items=\"Apple,Banana,Orange,Grape\"\n    width={300}\n    placeholder=\"Select or type an option\" />"
              }
            ]
          },
          "info": {
            "dirPath": "src/ComboBox",
            "documentation": {
              "path": "src/ComboBox/ComboBox.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/ComboBox/ComboBox.jsx"
            },
            "presets": [
              {
                "path": "src/ComboBox/presets/0-default.jsx"
              }
            ]
          },
          "name": "ComboBox",
          "presets": [
            {
              "elements": {
                "ComboBox1": {
                  "name": "ComboBox",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "ComboBox1"
            }
          ],
          "properties": [
            {
              "customDescription": "The label for the control",
              "customName": "Label",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 2
                }
              },
              "defaultValue": {
                "value": "Basic ComboBox"
              },
              "description": "",
              "isRequired": false,
              "name": "label",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Placeholder text to show until an item(s) is selected",
              "customName": "Placeholder",
              "defaultValue": {
                "value": " - Select -"
              },
              "description": "",
              "isRequired": false,
              "name": "placeholder",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether the ComboBox auto completes. As the user is inputing text, it will be suggested potential matches from the list of options.",
              "customName": "Auto-Complete",
              "defaultValue": {
                "value": "off"
              },
              "description": "Microsoft uses the values: \"on\", \"off\"",
              "isRequired": false,
              "name": "autoComplete",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "To allow multiple selections",
              "customName": "Multi-select",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "multiSelect",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "To disable the control",
              "customName": "Disabled",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "An error message to display below the control. Setting this value also displays the control in an error state.",
              "customName": "Error Message",
              "description": "",
              "isRequired": false,
              "name": "errorMessage",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The list of available options. Put each item on a separate line. Put quotes around an item to use a comma in it.",
              "customType": {
                "name": "codeeditor",
                "structure": {}
              },
              "defaultValue": {
                "value": "Apples\nBananas\n\"I love you, Grapes!\"\nPears"
              },
              "description": "",
              "isRequired": false,
              "name": "items",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the selected item(s) changes.",
              "customName": "Value Change",
              "description": "",
              "isRequired": false,
              "name": "onChange",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<CommandButton />"
              }
            ]
          },
          "info": {
            "dirPath": "src/CommandButton",
            "documentation": {
              "path": "src/CommandButton/CommandButton.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/CommandButton/CommandButton.jsx"
            },
            "presets": [
              {
                "path": "src/CommandButton/presets/0-default.jsx"
              }
            ]
          },
          "name": "CommandButton",
          "presets": [
            {
              "elements": {
                "commandbutton1": {
                  "name": "CommandButton",
                  "props": {
                    "style": {
                      "width": "100%"
                    }
                  }
                }
              },
              "name": "default",
              "rootId": "commandbutton1"
            }
          ],
          "properties": [
            {
              "customDescription": "The text to display on the button",
              "customName": "Text",
              "defaultValue": {
                "value": "Add Item"
              },
              "description": "",
              "isRequired": false,
              "name": "text",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library (Optional)",
              "customName": "Icon Name",
              "defaultValue": {
                "value": "Add"
              },
              "description": "",
              "isRequired": false,
              "name": "iconName",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To disable the control",
              "customName": "Disabled",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "An optional list of menu items. Put each option on a separate line.  Add an icon(IconName) at the start of each line.",
              "customName": "Menu Items",
              "customType": {
                "name": "codeeditor",
                "structure": {}
              },
              "defaultValue": {
                "value": "icon(Document) Add Document\nicon(FileCode) Add Code File\nicon(Picture) Add Picture"
              },
              "description": "",
              "isRequired": false,
              "name": "items",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the button is clicked on.",
              "customName": "Click",
              "description": "",
              "isRequired": false,
              "name": "onClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<CompoundButton />"
              }
            ]
          },
          "info": {
            "dirPath": "src/CompoundButton",
            "documentation": {
              "path": "src/CompoundButton/CompoundButton.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/CompoundButton/CompoundButton.jsx"
            },
            "presets": [
              {
                "path": "src/CompoundButton/presets/0-default.jsx"
              }
            ]
          },
          "name": "CompoundButton",
          "presets": [
            {
              "elements": {
                "compoundbutton1": {
                  "name": "CompoundButton",
                  "props": {
                    "style": {
                      "width": "100%"
                    }
                  }
                }
              },
              "name": "default",
              "rootId": "compoundbutton1"
            }
          ],
          "properties": [
            {
              "customDescription": "The larger primary displayed on the button",
              "customName": "Text",
              "defaultValue": {
                "value": "Basic Compound Button"
              },
              "description": "",
              "isRequired": false,
              "name": "text",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The smaller secondary displayed on the button",
              "customName": "Secondary Text",
              "defaultValue": {
                "value": "Secondary text"
              },
              "description": "",
              "isRequired": false,
              "name": "secondaryText",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To display the button in the filled style. Otherwise, displays in the outline style",
              "customName": "Primary Style",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "primary",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library (Optional)",
              "customName": "Icon Name",
              "defaultValue": {
                "value": "Home"
              },
              "description": "",
              "isRequired": false,
              "name": "iconName",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The location to display an icon, if one is set",
              "customName": "Icon Position",
              "description": "",
              "isRequired": false,
              "name": "iconPosition",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "start"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "end"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "To disable the control",
              "customName": "Disabled",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Sets whether to display the button in the rounded PayPal UI style.",
              "customName": "Rounded",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "rounded",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the button is clicked on.",
              "customName": "Click",
              "description": "",
              "isRequired": false,
              "name": "onClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<Dropdown placeholder=\"Select an option\" label=\"Basic uncontrolled example\" items=\"Apple, Orange, Cranberry\" inputWidth={300}/>"
              }
            ]
          },
          "info": {
            "dirPath": "src/Dropdown",
            "documentation": {
              "path": "src/Dropdown/Dropdown.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Dropdown/Dropdown.jsx"
            },
            "presets": [
              {
                "path": "src/Dropdown/presets/0-default.jsx"
              }
            ]
          },
          "name": "Dropdown",
          "presets": [
            {
              "elements": {
                "dropdown1": {
                  "name": "Dropdown",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "dropdown1"
            }
          ],
          "properties": [
            {
              "customDescription": "The label for the control",
              "customName": "Label",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 2
                }
              },
              "defaultValue": {
                "value": "Basic Dropdown"
              },
              "description": "",
              "isRequired": false,
              "name": "label",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Placeholder text to show until an item(s) is selected",
              "customName": "Placeholder",
              "defaultValue": {
                "value": " - Select -"
              },
              "description": "",
              "isRequired": false,
              "name": "placeholder",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To disable the control",
              "customName": "Disabled",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "To allow multiple selections",
              "customName": "Multi-select",
              "description": "",
              "isRequired": false,
              "name": "multiSelect",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "An error message to display below the control. Setting this value also displays the control in an error state.",
              "customName": "Error Message",
              "description": "",
              "isRequired": false,
              "name": "errorMessage",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To display the 'required' flag on the label",
              "customName": "Required",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "required",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The list of available options. Separate items with a comma.",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 4
                }
              },
              "defaultValue": {
                "value": "Apples, Bananas, Grapes, Pears"
              },
              "description": "",
              "isRequired": false,
              "name": "items",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the selected item(s) changes.",
              "customName": "Value Change",
              "description": "",
              "isRequired": false,
              "name": "onChange",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<IconButton />"
              }
            ]
          },
          "info": {
            "dirPath": "src/IconButton",
            "documentation": {
              "path": "src/IconButton/IconButton.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/IconButton/IconButton.jsx"
            },
            "presets": [
              {
                "path": "src/IconButton/presets/0-default.jsx"
              }
            ]
          },
          "name": "IconButton",
          "presets": [
            {
              "elements": {
                "iconbutton1": {
                  "name": "IconButton",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "iconbutton1"
            }
          ],
          "properties": [
            {
              "customDescription": "The tooltip text on the button",
              "customName": "Tooltip Text",
              "defaultValue": {
                "value": "Print"
              },
              "description": "",
              "isRequired": false,
              "name": "text",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library (Optional)",
              "customName": "Icon Name",
              "defaultValue": {
                "value": "Print"
              },
              "description": "",
              "isRequired": false,
              "name": "iconName",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To disable the control",
              "customName": "Disabled",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "An optional list of menu items. Put each option on a separate line.  Add an icon(IconName) at the start of each line.",
              "customName": "Menu Items",
              "customType": {
                "name": "codeeditor",
                "structure": {}
              },
              "defaultValue": {
                "value": "icon(Document) Add Document\nicon(FileCode) Add Code File\nicon(Picture) Add Picture"
              },
              "description": "",
              "isRequired": false,
              "name": "items",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the button is clicked on.",
              "customName": "Click",
              "description": "",
              "isRequired": false,
              "name": "onClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<Rating />"
              }
            ]
          },
          "info": {
            "dirPath": "src/Rating",
            "documentation": {
              "path": "src/Rating/Rating.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Rating/Rating.jsx"
            },
            "presets": [
              {
                "path": "src/Rating/presets/0-default.jsx"
              }
            ]
          },
          "name": "Rating",
          "presets": [
            {
              "elements": {
                "rating1": {
                  "name": "Rating",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "rating1"
            }
          ],
          "properties": [
            {
              "customDescription": "The rating value",
              "defaultValue": {
                "value": 0
              },
              "description": "",
              "isRequired": false,
              "name": "value",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "The number of stars to display from 1 - 20",
              "defaultValue": {
                "value": 5
              },
              "description": "",
              "isRequired": false,
              "name": "stars",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library",
              "defaultValue": {
                "value": "FavoriteStar"
              },
              "description": "",
              "isRequired": false,
              "name": "unselectedIcon",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library",
              "defaultValue": {
                "value": "FavoriteStarFill"
              },
              "description": "",
              "isRequired": false,
              "name": "selectedIcon",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The display size",
              "defaultValue": {
                "value": "Small"
              },
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "Small"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "Large"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "To disable the control",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the rating value changes.",
              "customName": "Value Change",
              "description": "",
              "isRequired": false,
              "name": "onChange",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<SearchBox />"
              }
            ]
          },
          "info": {
            "dirPath": "src/SearchBox",
            "documentation": {
              "path": "src/SearchBox/SearchBox.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/SearchBox/SearchBox.jsx"
            },
            "presets": [
              {
                "path": "src/SearchBox/presets/0-default.jsx"
              }
            ]
          },
          "name": "SearchBox",
          "presets": [
            {
              "elements": {
                "searchbox1": {
                  "name": "SearchBox",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "searchbox1"
            }
          ],
          "properties": [
            {
              "customDescription": "Current value of the text field",
              "customName": "Value",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 3
                }
              },
              "defaultValue": {
                "value": ""
              },
              "description": "We give this property a unique name to avoid collisions. We map its value to the control's 'value' prop.",
              "isRequired": false,
              "name": "textValue",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Placeholder text to show in the text field when it's empty",
              "customName": "Placeholder",
              "defaultValue": {
                "value": "Filter"
              },
              "description": "",
              "isRequired": false,
              "name": "placeholder",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To disable the control",
              "customName": "Disabled",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library. Displays on the right side.",
              "customName": "Icon Name",
              "defaultValue": {
                "value": "Funnel"
              },
              "description": "",
              "isRequired": false,
              "name": "icon",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the text value changes.",
              "customName": "Value Change",
              "description": "We give this property a unique name to avoid collisions. We map its value to the control's 'onChange' prop.",
              "isRequired": false,
              "name": "onValueChange",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the text value changes.",
              "customName": "Clear",
              "description": "We give this property a unique name to avoid collisions. We map its value to the control's 'onChange' prop.",
              "isRequired": false,
              "name": "onClear",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the text value changes.",
              "customName": "Search",
              "description": "We give this property a unique name to avoid collisions. We map its value to the control's 'onChange' prop.",
              "isRequired": false,
              "name": "onSearch",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<Slider />"
              }
            ]
          },
          "info": {
            "dirPath": "src/Slider",
            "documentation": {
              "path": "src/Slider/Slider.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Slider/Slider.jsx"
            },
            "presets": [
              {
                "path": "src/Slider/presets/0-default.jsx"
              }
            ]
          },
          "name": "Slider",
          "presets": [
            {
              "elements": {
                "slider1": {
                  "name": "Slider",
                  "props": {
                    "style": {
                      "height": "100%",
                      "width": "100%"
                    }
                  }
                }
              },
              "name": "default",
              "rootId": "slider1"
            }
          ],
          "properties": [
            {
              "customDescription": "Description label of the Slider",
              "customName": "Label",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 2
                }
              },
              "defaultValue": {
                "value": "Basic Slider"
              },
              "description": "",
              "isRequired": false,
              "name": "label",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The minimum value of the Slider",
              "customName": "Min",
              "defaultValue": {
                "value": 0
              },
              "description": "",
              "isRequired": false,
              "name": "min",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "The max value of the Slider",
              "customName": "Max",
              "defaultValue": {
                "value": 10
              },
              "description": "",
              "isRequired": false,
              "name": "max",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "The difference between the two adjacent values of the Slider",
              "customName": "Step",
              "defaultValue": {
                "value": 1
              },
              "description": "",
              "isRequired": false,
              "name": "step",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "Optional flag to render the slider vertically. Defaults to rendering horizontal",
              "customName": "Vertical",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "vertical",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The value of the Slider",
              "customName": "Value",
              "defaultValue": {
                "value": 2
              },
              "description": "",
              "isRequired": false,
              "name": "value",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "Optional flag whether to display the current Slider value",
              "customName": "Show Value",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "showValue",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the Slider value changes.",
              "customName": "Value Change",
              "description": "",
              "isRequired": false,
              "name": "onChange",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<SpinButton />"
              }
            ]
          },
          "info": {
            "dirPath": "src/SpinButton",
            "documentation": {
              "path": "src/SpinButton/SpinButton.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/SpinButton/SpinButton.jsx"
            },
            "presets": [
              {
                "path": "src/SpinButton/presets/0-default.jsx"
              }
            ]
          },
          "name": "SpinButton",
          "presets": [
            {
              "elements": {
                "spinButton1": {
                  "name": "SpinButton",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "spinButton1"
            }
          ],
          "properties": [
            {
              "customDescription": "The numeric value of the SpinButton (Required)",
              "customName": "Value",
              "defaultValue": {
                "value": "1"
              },
              "description": "",
              "isRequired": false,
              "name": "value",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Description label of the SpinButton",
              "customName": "Label",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 2
                }
              },
              "defaultValue": {
                "value": "Basic SpinButton"
              },
              "description": "",
              "isRequired": false,
              "name": "label",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The minimum value of the SpinButton",
              "customName": "Min",
              "defaultValue": {
                "value": 0
              },
              "description": "",
              "isRequired": false,
              "name": "min",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "The maximum value of the SpinButton",
              "customName": "Max",
              "defaultValue": {
                "value": 10
              },
              "description": "",
              "isRequired": false,
              "name": "max",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "The amount to raise or lower the value when clicking on the up or down buttons",
              "customName": "Step",
              "defaultValue": {
                "value": 0.5
              },
              "description": "",
              "isRequired": false,
              "name": "step",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "A little tooltip that will display on hover",
              "customName": "Tooltip",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 2
                }
              },
              "defaultValue": {
                "value": ""
              },
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To disable the control",
              "customName": "Disabled",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the value has changed",
              "customName": "Value Changed",
              "description": "",
              "isRequired": false,
              "name": "onChange",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<SplitButton />"
              }
            ]
          },
          "info": {
            "dirPath": "src/SplitButton",
            "documentation": {
              "path": "src/SplitButton/SplitButton.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/SplitButton/SplitButton.jsx"
            },
            "presets": [
              {
                "path": "src/SplitButton/presets/0-default.jsx"
              }
            ]
          },
          "name": "SplitButton",
          "presets": [
            {
              "elements": {
                "splitbutton1": {
                  "name": "SplitButton",
                  "props": {
                    "style": {
                      "width": "100%"
                    }
                  }
                }
              },
              "name": "default",
              "rootId": "splitbutton1"
            }
          ],
          "properties": [
            {
              "customDescription": "The text to display on the button",
              "customName": "Text",
              "defaultValue": {
                "value": "Split Button"
              },
              "description": "",
              "isRequired": false,
              "name": "text",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library (Optional)",
              "customName": "Icon Name",
              "defaultValue": {
                "value": "Add"
              },
              "description": "",
              "isRequired": false,
              "name": "iconName",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To display the button in the filled style. Otherwise, displays in the outline style",
              "customName": "Primary Style",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "primary",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "To disable the control",
              "customName": "Disabled",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "An optional list of menu items. Put each option on a separate line.  Add an icon(IconName) at the start of each line.",
              "customName": "Menu Items",
              "customType": {
                "name": "codeeditor",
                "structure": {}
              },
              "defaultValue": {
                "value": "icon(Document) Add Document\nicon(FileCode) Add Code File\nicon(Picture) Add Picture"
              },
              "description": "",
              "isRequired": false,
              "name": "items",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the button is clicked on.",
              "customName": "Click",
              "description": "",
              "isRequired": false,
              "name": "onClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<TextField label=\"Label (clear to remove)\" inputWidth={300}/>"
              }
            ]
          },
          "info": {
            "dirPath": "src/TextField",
            "documentation": {
              "path": "src/TextField/TextField.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/TextField/TextField.jsx"
            },
            "presets": [
              {
                "path": "src/TextField/presets/0-default.jsx"
              }
            ]
          },
          "name": "TextField",
          "presets": [
            {
              "elements": {
                "textfield1": {
                  "name": "TextField",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "textfield1"
            }
          ],
          "properties": [
            {
              "customDescription": "The label for the switch",
              "customName": "Label",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 2
                }
              },
              "defaultValue": {
                "value": "Basic Text Field"
              },
              "description": "",
              "isRequired": false,
              "name": "label",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "For multiline text fields, whether or not to auto adjust text field height",
              "customName": "Auto Adjust Height",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "autoAdjustHeight",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Description displayed below the text field to provide additional details about what text to enter",
              "customName": "Description",
              "description": "",
              "isRequired": false,
              "name": "description",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Current value of the text field",
              "customName": "Value",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 3
                }
              },
              "defaultValue": {
                "value": ""
              },
              "description": "We give this property a unique name to avoid collisions. We map its value to the control's 'value' prop.",
              "isRequired": false,
              "name": "textValue",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Placeholder text to show in the text field when it's empty",
              "customName": "Placeholder",
              "defaultValue": {
                "value": "Enter some text"
              },
              "description": "",
              "isRequired": false,
              "name": "placeholder",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To disable the control",
              "customName": "Disabled",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "An error message to display below the control. Setting this value also displays the control in an error state.",
              "customName": "Error Message",
              "description": "",
              "isRequired": false,
              "name": "errorMessage",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library. Displays on the right side. (Optional)",
              "customName": "Icon Name",
              "description": "",
              "isRequired": false,
              "name": "icon",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether or not the text field is a multiline text field",
              "customName": "Multiline",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "multiline",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Text to display within the front section of the text field",
              "customName": "Prefix",
              "description": "",
              "isRequired": false,
              "name": "prefix",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Text to display within the end section of the text field",
              "customName": "Suffix",
              "description": "",
              "isRequired": false,
              "name": "suffix",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To set the control to read-only mode",
              "customName": "Read Only",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "readOnly",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "To display the 'required' flag on the label",
              "customName": "Required",
              "description": "",
              "isRequired": false,
              "name": "required",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the text value changes.",
              "customName": "Value Change",
              "description": "We give this property a unique name to avoid collisions. We map its value to the control's 'onChange' prop.",
              "isRequired": false,
              "name": "onValueChange",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<Toggle label=\"Toggle label (clear to remove)\" />"
              }
            ]
          },
          "info": {
            "dirPath": "src/Toggle",
            "documentation": {
              "path": "src/Toggle/Toggle.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Toggle/Toggle.jsx"
            },
            "presets": [
              {
                "path": "src/Toggle/presets/0-default.jsx"
              }
            ]
          },
          "name": "Toggle",
          "presets": [
            {
              "elements": {
                "toggle1": {
                  "name": "Toggle",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "toggle1"
            }
          ],
          "properties": [
            {
              "customDescription": "The label for the switch",
              "customName": "Label",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 2
                }
              },
              "defaultValue": {
                "value": "Basic Toggle"
              },
              "description": "",
              "isRequired": false,
              "name": "label",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The text to show when the value is on (Required)",
              "customName": "On Text",
              "defaultValue": {
                "value": "On"
              },
              "description": "",
              "isRequired": false,
              "name": "onText",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The text to show when the value is off (Required)",
              "customName": "Off Text",
              "defaultValue": {
                "value": "Off"
              },
              "description": "",
              "isRequired": false,
              "name": "offText",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The checked state of the control",
              "customName": "Checked",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "isChecked",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "To position on the same line as the control (true), or above the control (false)",
              "customName": "Inline Label",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "inlineLabel",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "To disable the control",
              "customName": "Disabled",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the toggle state changes.",
              "customName": "Value Change",
              "description": "",
              "isRequired": false,
              "name": "onChange",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        }
      ],
      "name": "Basic Input"
    },
    {
      "components": [
        {
          "documentation": {
            "examples": [
              {
                "code": "<Calendar />"
              }
            ]
          },
          "info": {
            "dirPath": "src/Calendar",
            "documentation": {
              "path": "src/Calendar/Calendar.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Calendar/Calendar.jsx"
            },
            "presets": [
              {
                "path": "src/Calendar/presets/0-default.jsx"
              }
            ]
          },
          "name": "Calendar",
          "presets": [
            {
              "elements": {
                "calendar1": {
                  "name": "Calendar",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "calendar1"
            }
          ],
          "properties": [
            {
              "customDescription": "Set the date in the control using one of these formats: Feb 8, 2020 -OR- 2/6/2020",
              "customName": "Date",
              "defaultValue": {
                "value": "Jan 15, 2020"
              },
              "description": "A unique name for this property. Got some weird behavior with the same name as the control's prop.",
              "isRequired": false,
              "name": "uxpValue",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To display week numbers on the left side of the Calendar",
              "customName": "Show Week Numbers",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "showWeekNumbers",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when a date is selected",
              "customName": "Date Selected",
              "description": "",
              "isRequired": false,
              "name": "onSelectDate",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<CalendarButton />"
              }
            ]
          },
          "info": {
            "dirPath": "src/CalendarButton",
            "documentation": {
              "path": "src/CalendarButton/CalendarButton.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/CalendarButton/CalendarButton.jsx"
            },
            "presets": [
              {
                "path": "src/CalendarButton/presets/0-default.jsx"
              }
            ]
          },
          "name": "CalendarButton",
          "presets": [
            {
              "elements": {
                "calendarButton1": {
                  "name": "CalendarButton",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "calendarButton1"
            }
          ],
          "properties": [
            {
              "customDescription": "Reflect the control's role in the UI with its visual style",
              "customName": "Button Type",
              "defaultValue": {
                "value": "Command"
              },
              "description": "",
              "isRequired": false,
              "name": "buttonType",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "Command"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "Primary"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "Secondary"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "Sets whether to display a Primary or Secondary  button in the rounded PayPal UI style.",
              "customName": "Rounded",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "rounded",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The displayed text on the button (Optional)",
              "customName": "Button Text",
              "defaultValue": {
                "value": "Show Calendar"
              },
              "description": "",
              "isRequired": false,
              "name": "buttonText",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library (Optional)",
              "customName": "Button Icon Name",
              "defaultValue": {
                "value": "Calendar"
              },
              "description": "",
              "isRequired": false,
              "name": "buttonIcon",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Set the date in the control using one of these formats: Feb 8, 2020 -OR- 2/6/2020",
              "customName": "Date",
              "defaultValue": {
                "value": "Jan 15, 2020"
              },
              "description": "A unique name for this property. Got some weird behavior with the same name as the control's prop.",
              "isRequired": false,
              "name": "calDate",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To replace the default string on the button with the selected date",
              "customName": "Show Selected Date",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "showSelectedDate",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "To display week numbers on the left side of the Calendar",
              "customName": "Show Week Numbers",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "showWeekNumbers",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "To disable the control",
              "customName": "Disabled",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "buttonDisabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when a date is selected",
              "customName": "Date Selected",
              "description": "",
              "isRequired": false,
              "name": "onSelectDate",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<ColorPicker />"
              }
            ]
          },
          "info": {
            "dirPath": "src/ColorPicker",
            "documentation": {
              "path": "src/ColorPicker/ColorPicker.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/ColorPicker/ColorPicker.jsx"
            },
            "presets": [
              {
                "path": "src/ColorPicker/presets/0-default.jsx"
              }
            ]
          },
          "name": "ColorPicker",
          "presets": [
            {
              "elements": {
                "colorpicker1": {
                  "name": "ColorPicker",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "colorpicker1"
            }
          ],
          "properties": [
            {
              "customDescription": "A PayPal UI or Hex color value to provide as the default color, such as: 'blue-600' or '#0070BA' (Optional)",
              "customName": "Selected Color",
              "defaultValue": {
                "value": ""
              },
              "description": "",
              "isRequired": false,
              "name": "selectedColor",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To show the Alpha transparency features",
              "customName": "Show Alpha",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "showAlpha",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when a color is selected",
              "customName": "Change",
              "description": "",
              "isRequired": false,
              "name": "onColorChange",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<DatePicker />"
              }
            ]
          },
          "info": {
            "dirPath": "src/DatePicker",
            "documentation": {
              "path": "src/DatePicker/DatePicker.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/DatePicker/DatePicker.jsx"
            },
            "presets": [
              {
                "path": "src/DatePicker/presets/0-default.jsx"
              }
            ]
          },
          "name": "DatePicker",
          "presets": [
            {
              "elements": {
                "datepicker1": {
                  "name": "DatePicker",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "datepicker1"
            }
          ],
          "properties": [
            {
              "customDescription": "The label for the switch",
              "customName": "Label",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 2
                }
              },
              "defaultValue": {
                "value": "Basic DatePicker"
              },
              "description": "",
              "isRequired": false,
              "name": "label",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Set the date in the control using one of these formats: Feb 8, 2020 -OR- 2/6/2020",
              "customName": "Date",
              "defaultValue": {
                "value": ""
              },
              "description": "A unique name for this property. Got some weird behavior with the same name as the control's prop.",
              "isRequired": false,
              "name": "calDate",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Placeholder text to show in the text field when it's empty",
              "customName": "Placeholder",
              "defaultValue": {
                "value": "Enter date: Jan 15, 2020 or 1/15/2020"
              },
              "description": "",
              "isRequired": false,
              "name": "placeholder",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To allow the user to enter a date into the field",
              "customName": "Allow Text Input",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "allowTextInput",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "To display the 'required' flag on the label",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "required",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "To display week numbers on the left side of the Calendar",
              "customName": "Show Week Numbers",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "showWeekNumbers",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when a date is selected",
              "customName": "Date Selected",
              "description": "",
              "isRequired": false,
              "name": "onSelectDate",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<SwatchColorPicker />"
              }
            ]
          },
          "info": {
            "dirPath": "src/SwatchColorPicker",
            "documentation": {
              "path": "src/SwatchColorPicker/SwatchColorPicker.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/SwatchColorPicker/SwatchColorPicker.jsx"
            },
            "presets": [
              {
                "path": "src/SwatchColorPicker/presets/0-default.jsx"
              }
            ]
          },
          "name": "SwatchColorPicker",
          "presets": [
            {
              "elements": {
                "swatchcolorpicker1": {
                  "name": "SwatchColorPicker",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "swatchcolorpicker1"
            }
          ],
          "properties": [
            {
              "customDescription": "The exact name from the PayPal icon library (Optional)",
              "customName": "Icon Name",
              "defaultValue": {
                "value": "circle"
              },
              "description": "",
              "isRequired": false,
              "name": "shape",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "circle"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "square"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "The size to use for the width and height. Valid values are between 10 - 100.",
              "defaultValue": {
                "value": 24
              },
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "The number of swatches to display in each row",
              "defaultValue": {
                "value": 5
              },
              "description": "",
              "isRequired": false,
              "name": "columns",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "The padding to use between each color swatch",
              "defaultValue": {
                "value": 10
              },
              "description": "",
              "isRequired": false,
              "name": "padding",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "Select one of the PayPal UI color palettes, or enter a custom set of your own with the Custom Colors property",
              "customName": "Palette",
              "defaultValue": {
                "value": "PayPal UI Blues"
              },
              "description": "",
              "isRequired": false,
              "name": "palette",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "PayPal UI Blues"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "PayPal UI Greys"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "PayPal UI Accents"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "Custom"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "Enter one color per line using this pattern: Color Name, Hex Value. Note the comma! Example: Eggshell Blue, #0070BA",
              "customName": "Custom Colors",
              "description": "",
              "isRequired": false,
              "name": "colors",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The 1-based index for the selected color. Leave blank or enter -1 for no selection.",
              "customName": "Selected Color",
              "description": "",
              "isRequired": false,
              "name": "selectedColor",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "To disable the control",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when a color is selected",
              "customName": "Change",
              "description": "",
              "isRequired": false,
              "name": "onChange",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        }
      ],
      "name": "Galleries & Pickers"
    },
    {
      "components": [
        {
          "documentation": {
            "examples": [
              {
                "code": "<ActivityItem />"
              }
            ]
          },
          "info": {
            "dirPath": "src/ActivityItem",
            "documentation": {
              "path": "src/ActivityItem/ActivityItem.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/ActivityItem/ActivityItem.jsx"
            },
            "presets": [
              {
                "path": "src/ActivityItem/presets/0-default.jsx"
              }
            ]
          },
          "name": "ActivityItem",
          "presets": [
            {
              "elements": {
                "activityitem1": {
                  "name": "ActivityItem",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "activityitem1"
            }
          ],
          "properties": [
            {
              "customDescription": "The top line of text summarizing what the activity was. Supports the link(Click Me) feature.",
              "customName": "Description",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 4
                }
              },
              "defaultValue": {
                "value": "link(Tahlia) created a new Test Environment"
              },
              "description": "",
              "isRequired": false,
              "name": "description",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The main body of text detailing the activity. Supports the link(Click Me) feature.",
              "customName": "Comments",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 5
                }
              },
              "defaultValue": {
                "value": "link(Fabulous TestEnv) contains 5 components. You have been listed as an operator."
              },
              "description": "We have to have a proprietary prop or else Microsoft will use this value before we can transform the input.\nThis prop will be mapped to the 'comments' property.",
              "isRequired": false,
              "name": "bodyCopy",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Brief timestamp info.",
              "customName": "Timestamp",
              "defaultValue": {
                "value": "Just now"
              },
              "description": "",
              "isRequired": false,
              "name": "timeStamp",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library. Displays on the right side. (Optional)",
              "customName": "Icon Name",
              "defaultValue": {
                "value": "Beaker"
              },
              "description": "",
              "isRequired": false,
              "name": "icon",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether to display the control in Compact mode.",
              "customName": "Compact Mode",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "isCompact",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the control is clicked on.",
              "customName": "Click",
              "description": "",
              "isRequired": false,
              "name": "onClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<DetailsList \n  uxpId=\"DetailsList1\"\n    columns={`Aa icon(StockUp|color-blue-500),  Bb, Cc link(link)`}\n    items={\n      `A-1, B-1, C-1 icon(SkypeCircleCheck|color-green-700)\n A-2, B-2,  icon(SkypeCircleMinus|color-red-700) C-2 icon(SkypeCircleSlash|color-blue-700)  icon(SkypeCircleArrow|color-orange-700)\n A-3, B-3, C-3`\n    }\n  isResizable />"
              }
            ]
          },
          "info": {
            "dirPath": "src/DetailsList",
            "documentation": {
              "path": "src/DetailsList/DetailsList.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/DetailsList/DetailsList.jsx"
            },
            "presets": [
              {
                "path": "src/DetailsList/presets/0-default.jsx"
              }
            ]
          },
          "name": "DetailsList",
          "presets": [
            {
              "elements": {
                "DetailsList1": {
                  "name": "DetailsList",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "DetailsList1"
            }
          ],
          "properties": [
            {
              "customDescription": "Enter one column per row. Supports these features: link(Link Text) and icon(Name|color-blue-600). Also supports CSV formatting.",
              "customType": {
                "name": "codeeditor",
                "structure": {}
              },
              "defaultValue": {
                "value": "Column A,  Column B, Column C, Column D, Actions"
              },
              "description": "Separate each item with new line or | symbol.\nPut at the end of the line [color:blue-600] token to set color for whole column.",
              "isRequired": false,
              "name": "columns",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Enter one row per line. Supports these features: link(Link Text) and icon(Name|color-blue-600). Also supports CSV formatting.",
              "customName": "Rows",
              "customType": {
                "name": "codeeditor",
                "structure": {}
              },
              "defaultValue": {
                "value": "link(Component_Name_A), icon(CircleCheckSolid|color-green-600) Ready, C-1, D-1, icon(Document|color-blue-600) icon(MoreVertical|color-blue-600)\nlink(Component_Name_B), icon(CircleWarningSolid|color-orange-500) Restarting..., C-2, D-2, icon(Document|color-blue-600) icon(MoreVertical|color-blue-600)\nlink(Component_Name_C), icon(CircleClearSolid|color-red-500) Unavailable, C-3, D-3, icon(Document|color-blue-600) icon(MoreVertical|color-blue-600)"
              },
              "description": "Separate each item with | , Separate each row with new line or || symbol.\nIcon token [icon:Snow:blue-600]\nGet icons at https://uifabricicons.azurewebsites.net/",
              "isRequired": false,
              "name": "items",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Enter a comma-separated list of column numbers for right aligning their contents (Optional)",
              "customName": "Alight Right",
              "defaultValue": {
                "value": "5"
              },
              "description": "Example: 2, 3",
              "isRequired": false,
              "name": "alignRight",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Enter a comma-separated list of column numbers for center aligning their contents (Optional)",
              "customName": "Align Center",
              "defaultValue": {
                "value": "3, 4"
              },
              "description": "Example: 2, 3",
              "isRequired": false,
              "name": "alignCenter",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Minimum column width width",
              "customName": "Min Width",
              "defaultValue": {
                "value": 125
              },
              "description": "",
              "isRequired": false,
              "name": "minWidth",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "Maximum column width width",
              "customName": "Max Width",
              "defaultValue": {
                "value": 350
              },
              "description": "",
              "isRequired": false,
              "name": "maxWidth",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether to show the filter SearchBox",
              "customName": "Show Filter",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "isSearchEnabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether to display the table headers",
              "customName": "Show Headers",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "header",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library. Displays on the right side.",
              "customName": "Search Icon",
              "defaultValue": {
                "value": "Funnel"
              },
              "description": "",
              "isRequired": false,
              "name": "icon",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Placeholder text to show in the text field when it's empty",
              "customName": "Search Placeholder",
              "defaultValue": {
                "value": "Filter"
              },
              "description": "",
              "isRequired": false,
              "name": "placeholder",
              "type": {
                "name": "string",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<Persona uxpId=\"persona1\"/>"
              }
            ]
          },
          "info": {
            "dirPath": "src/Persona",
            "documentation": {
              "path": "src/Persona/Persona.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Persona/Persona.jsx"
            },
            "presets": [
              {
                "path": "src/Persona/presets/0-default.jsx"
              }
            ]
          },
          "name": "Persona",
          "presets": [
            {
              "elements": {
                "persona1": {
                  "name": "Persona",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "persona1"
            }
          ],
          "properties": [
            {
              "customDescription": "The URL to an image file. Leave empty to display initials instead.",
              "customName": "Img URL",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 3
                }
              },
              "defaultValue": {
                "value": "https://static2.sharepointonline.com/files/fabric/office-ui-fabric-react-assets/persona-female.png"
              },
              "description": "",
              "isRequired": false,
              "name": "imageUrl",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The control's size",
              "customName": "Size",
              "defaultValue": {
                "value": "size100"
              },
              "description": "Requires a proprietary PayPal prop name, or else things get screwy.",
              "isRequired": false,
              "name": "ppSize",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "size8"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "size24"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "size32"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "size40"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "size56"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "size72"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "size100"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "The user's presence status",
              "customName": "Presence",
              "defaultValue": {
                "value": "online"
              },
              "description": "Requires a proprietary PayPal prop name, or else things get screwy.",
              "isRequired": false,
              "name": "ppPresence",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "none"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "online"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "offline"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "away"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "busy"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "dnd"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "blocked"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "If no image, the color of the 'coin' showing the user's initials",
              "customName": "Initials Color",
              "defaultValue": {
                "value": "blue"
              },
              "description": "Requires a proprietary PayPal prop name, or else things get screwy",
              "isRequired": false,
              "name": "ppInitialsColor",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "green"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "darkGreen"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "teal"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "lightBlue"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "blue"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "darkBlue"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "violet"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "purple"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "magenta"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "lightPink"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "pink"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "burgundy"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "lightRed"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "darkRed"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "orange"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "rust"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "gold"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "warmGray"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "coolGray"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "If no image, the initials to display on the 'coin'",
              "customName": "Initials",
              "defaultValue": {
                "value": "AL"
              },
              "description": "",
              "isRequired": false,
              "name": "initials",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The full name for this persona",
              "customName": "Name",
              "defaultValue": {
                "value": "Annie Lindqvist"
              },
              "description": "",
              "isRequired": false,
              "name": "name",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "This persona's role; displayed under their name",
              "customName": "Role",
              "defaultValue": {
                "value": "Software Engineer"
              },
              "description": "",
              "isRequired": false,
              "name": "role",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "This persona's current availability status, such as 'In a meeting'",
              "customName": "Status",
              "defaultValue": {
                "value": "In a meeting"
              },
              "description": "",
              "isRequired": false,
              "name": "status",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "In very large Personas, a 4th line of text can show more info, if desired",
              "customName": "Additional Text",
              "defaultValue": {
                "value": "Available at 4:00 PM PST"
              },
              "description": "",
              "isRequired": false,
              "name": "optional",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether to display coin using the 'Unknown Person' style",
              "customName": "Unknown Person",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "showUnknownPersonaCoin",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether to display the persona's details or only the 'coin'",
              "customName": "Hide Details",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "hidePersonaDetails",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the control is clicked on",
              "customName": "Click",
              "description": "",
              "isRequired": false,
              "name": "onClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<Facepile />"
              }
            ]
          },
          "info": {
            "dirPath": "src/Facepile",
            "documentation": {
              "path": "src/Facepile/Facepile.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Facepile/Facepile.jsx"
            },
            "presets": [
              {
                "path": "src/Facepile/presets/0-default.jsx"
              }
            ]
          },
          "name": "Facepile",
          "presets": [
            {
              "elements": {
                "facepile1": {
                  "name": "Facepile",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "facepile1"
            }
          ],
          "properties": [
            {
              "customDescription": "The control's size",
              "customName": "Size",
              "defaultValue": {
                "value": "size32"
              },
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "size16"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "size24"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "size28"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "size32"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "size40"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "The number of personas to display",
              "customName": "Count",
              "defaultValue": {
                "value": 5
              },
              "description": "",
              "isRequired": false,
              "name": "number",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether to display the Add button",
              "customName": "Add Button",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "showAddButton",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether to display the overflow button.",
              "customName": "Show Overflow Button",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "showOverflowButton",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when one of the personas is clicked on.",
              "customName": "Click",
              "description": "",
              "isRequired": false,
              "name": "onClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the Add Button is clicked on.",
              "customName": "Add Click",
              "description": "",
              "isRequired": false,
              "name": "onAddClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the Overflow Button is clicked on.",
              "customName": "Overflow Click",
              "description": "",
              "isRequired": false,
              "name": "onOverflowClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": []
          },
          "info": {
            "dirPath": "src/TagItem",
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/TagItem/TagItem.jsx"
            },
            "presets": [
              {
                "path": "src/TagItem/presets/0-default.jsx"
              }
            ]
          },
          "name": "TagItem",
          "presets": [
            {
              "elements": {
                "tagitem1": {
                  "name": "TagItem",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "tagitem1"
            }
          ],
          "properties": [
            {
              "customDescription": "The displayed text",
              "defaultValue": {
                "value": "Tag Item"
              },
              "description": "",
              "isRequired": false,
              "name": "text",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Reflect the control's role in the UI with its visual style",
              "defaultValue": {
                "value": "Default"
              },
              "description": "",
              "isRequired": false,
              "name": "role",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "Default"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "Info"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "Success"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "Warning"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "Error"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "To enable a visual effect on mouse hover",
              "customName": "Hover Effect",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "hoverEffect",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether to display the Close button",
              "customName": "Show Close Button",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "showClose",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "To disable the control",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the button is clicked on.",
              "customName": "Click",
              "description": "",
              "isRequired": false,
              "name": "onClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        }
      ],
      "name": "Items & Lists"
    },
    {
      "components": [
        {
          "documentation": {
            "examples": [
              {
                "code": "<Nav \n  uxpId=\"nav1\"\n  items={`Aa\n\"B, b\"\nCc`} />"
              }
            ]
          },
          "info": {
            "dirPath": "src/Nav",
            "documentation": {
              "path": "src/Nav/Nav.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Nav/Nav.jsx"
            },
            "presets": [
              {
                "path": "src/Nav/presets/0-default.jsx"
              }
            ]
          },
          "name": "Nav",
          "presets": [
            {
              "elements": {
                "nav1": {
                  "name": "Nav",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "nav1"
            }
          ],
          "properties": [
            {
              "customDescription": "The 1-based index value of the tab to be shown as selected by default",
              "customName": "Selected Index",
              "defaultValue": {
                "value": 1
              },
              "description": "",
              "isRequired": false,
              "name": "selectedIndex",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "The list of nav items. Put each item on a separate line. Specify an icon using: icon(IconName)",
              "customName": "Items",
              "customType": {
                "name": "codeeditor",
                "structure": {}
              },
              "defaultValue": {
                "value": "icon(Dashboard) Overview\nicon(FavoriteStarFill) Favorites\nicon(Upload) Upload\nicon(BIDashboard) Metrics\nicon(Commitments) Data Services\nicon(Admin) Admin"
              },
              "description": "",
              "isRequired": false,
              "name": "items",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The list of nav items to show as disabled, separated with commas. (1-based index)",
              "customName": "Disabled Items",
              "defaultValue": {
                "value": "5, 8"
              },
              "description": "",
              "isRequired": false,
              "name": "disabled",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether to apply styling to the control's background",
              "customName": "Styled Background",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "styledBackground",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Item 1 is clicked",
              "customName": "Item 1 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink1Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Item 2 is clicked",
              "customName": "Item 2 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink2Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Item 3 is clicked",
              "customName": "Item 3 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink3Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Item 4 is clicked",
              "customName": "Item 4 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink4Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Item 5 is clicked",
              "customName": "Item 5 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink5Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Item 6 is clicked",
              "customName": "Item 6 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink6Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Item 7 is clicked",
              "customName": "Item 7 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink7Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Item 8 is clicked",
              "customName": "Item 8 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink8Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Item 9 is clicked",
              "customName": "Item 9 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink9Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Item 10 is clicked",
              "customName": "Item 10 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink10Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Item 11 is clicked",
              "customName": "Item 11 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink11Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Item 12 is clicked",
              "customName": "Item 12 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink12Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Item 13 is clicked",
              "customName": "Item 13 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink13Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Item 14 is clicked",
              "customName": "Item 14 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink14Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Item 15 is clicked",
              "customName": "Item 15 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink15Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<Pivot tabs=\"one,two,three\"/>"
              }
            ]
          },
          "info": {
            "dirPath": "src/Pivot",
            "documentation": {
              "path": "src/Pivot/Pivot.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Pivot/Pivot.jsx"
            },
            "presets": [
              {
                "path": "src/Pivot/presets/0-default.jsx"
              }
            ]
          },
          "name": "Pivot",
          "presets": [
            {
              "elements": {
                "pivot1": {
                  "name": "Pivot",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "pivot1"
            }
          ],
          "properties": [
            {
              "customDescription": "The list of tabs. Separate each option with a comma. Icons and commas within tab text are not currently supported.",
              "customName": "Tabs",
              "customType": {
                "name": "codeeditor",
                "structure": {}
              },
              "defaultValue": {
                "value": "Tab One\nTab Two\nTab Three\nTab Four"
              },
              "description": "",
              "isRequired": false,
              "name": "tabs",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The 1-based index value of the tab to be shown as selected by default",
              "customName": "Selected Index",
              "defaultValue": {
                "value": 1
              },
              "description": "",
              "isRequired": false,
              "name": "selectedIndex",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "Size option",
              "customName": "Tab Size",
              "defaultValue": {
                "value": "normal"
              },
              "description": "",
              "isRequired": false,
              "name": "linkSize",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "normal"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "large"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "Fires when Tab 1 is clicked",
              "customName": "Tab 1 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink1Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Tab 2 is clicked",
              "customName": "Tab 2 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink2Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Tab 3 is clicked",
              "customName": "Tab 3 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink3Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Tab 4 is clicked",
              "customName": "Tab 4 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink4Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Tab 5 is clicked",
              "customName": "Tab 5 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink5Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Tab 6 is clicked",
              "customName": "Tab 6 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink6Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Tab 7 is clicked",
              "customName": "Tab 7 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink7Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Tab 8 is clicked",
              "customName": "Tab 8 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink8Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when Tab 9 is clicked",
              "customName": "Tab 9 Click",
              "description": "",
              "isRequired": false,
              "name": "onLink9Click",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        }
      ],
      "name": "Commands, Menus & Navs"
    },
    {
      "components": [
        {
          "documentation": {
            "examples": [
              {
                "code": "<Coachmark />"
              }
            ]
          },
          "info": {
            "dirPath": "src/Coachmark",
            "documentation": {
              "path": "src/Coachmark/Coachmark.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Coachmark/Coachmark.jsx"
            },
            "presets": [
              {
                "path": "src/Coachmark/presets/0-default.jsx"
              }
            ]
          },
          "name": "Coachmark",
          "presets": [
            {
              "elements": {
                "coachmark1": {
                  "name": "Coachmark",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "coachmark1"
            }
          ],
          "properties": [
            {
              "customDescription": "Whether to display the Coachmark",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "open",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The control's title text",
              "customName": "Headline",
              "defaultValue": {
                "value": "Basic Coachmark"
              },
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The main message text",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 4
                }
              },
              "defaultValue": {
                "value": "Welcome to the land of Coachmarks!"
              },
              "description": "",
              "isRequired": false,
              "name": "text",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Footer text to display in the bottom left corner.",
              "defaultValue": {
                "value": ""
              },
              "description": "",
              "isRequired": false,
              "name": "footerText",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The displayed text on the Primary Button. Remove text to hide button.",
              "customName": "Text: Primary Button",
              "defaultValue": {
                "value": "Next"
              },
              "description": "",
              "isRequired": false,
              "name": "primaryButtonLabel",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library (Optional)",
              "customName": "Icon: Primary Button",
              "description": "",
              "isRequired": false,
              "name": "primaryButtonIcon",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The displayed text on the Secondary Button. Remove text to hide button.",
              "customName": "Text: Secondary Button",
              "defaultValue": {
                "value": "Close"
              },
              "description": "",
              "isRequired": false,
              "name": "secondaryButtonLabel",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library (Optional)",
              "customName": "Icon: Secondary Button",
              "defaultValue": {
                "value": "Close"
              },
              "description": "",
              "isRequired": false,
              "name": "secondaryButtonIcon",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The control's display direction",
              "defaultValue": {
                "value": "bottomAutoEdge"
              },
              "description": "",
              "isRequired": false,
              "name": "direction",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "topLeftEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "topCenter"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "topRightEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "topAutoEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottomLeftEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottomCenter"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottomRightEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottomAutoEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "leftTopEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "leftCenter"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "leftBottomEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "rightTopEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "rightCenter"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "rightBottomEdge"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "Whether to show the light blue target marker on the canvas",
              "customName": "Show Marker",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "showMarker",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the Close button is clicked",
              "customName": "Close Button Click",
              "description": "",
              "isRequired": false,
              "name": "dismiss",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the Primary Button is clicked on",
              "customName": "Primary Button Click",
              "description": "",
              "isRequired": false,
              "name": "primaryButtonClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the Secondary Button is clicked on",
              "customName": "Secondary Button Click",
              "description": "",
              "isRequired": false,
              "name": "secondaryButtonClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<MessageBar />"
              }
            ]
          },
          "info": {
            "dirPath": "src/MessageBar",
            "documentation": {
              "path": "src/MessageBar/MessageBar.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/MessageBar/MessageBar.jsx"
            },
            "presets": [
              {
                "path": "src/MessageBar/presets/0-default.jsx"
              }
            ]
          },
          "name": "MessageBar",
          "presets": [
            {
              "elements": {
                "messageBar1": {
                  "name": "MessageBar",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "messageBar1"
            }
          ],
          "properties": [
            {
              "customDescription": "The control's message. Supports the link(Click Me) feature.",
              "customName": "Description",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 6
                }
              },
              "defaultValue": {
                "value": "This is a Basic Message Bar. link(Learn More...)"
              },
              "description": "",
              "isRequired": false,
              "name": "message",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Reflect the control's role in the UI with its visual style",
              "customName": "Role",
              "defaultValue": {
                "value": "info"
              },
              "description": "",
              "isRequired": false,
              "name": "messageBarType",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "info"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "success"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "warning"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "severeWarning"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "error"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "remove"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "blocked"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "Whether to allow the text to wrap across multiple lines",
              "customName": "Multiline",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "multiline",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The text to display on the Primary Button (Optional)",
              "customName": "Primary Button Text",
              "defaultValue": {
                "value": "Yes"
              },
              "description": "",
              "isRequired": false,
              "name": "button1Text",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The text to display on the Secondary Button (Optional)",
              "customName": "Secondary Button Text",
              "defaultValue": {
                "value": "No"
              },
              "description": "",
              "isRequired": false,
              "name": "button2Text",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the Close button is clicked on",
              "customName": "Dismiss",
              "description": "",
              "isRequired": false,
              "name": "onDismissClicked",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the Primary Button is clicked on",
              "customName": "Primary Click",
              "description": "",
              "isRequired": false,
              "name": "onClick1",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the Secondary Button is clicked on",
              "customName": "Secondary Click",
              "description": "",
              "isRequired": false,
              "name": "onClick2",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<TeachingBubble />"
              }
            ]
          },
          "info": {
            "dirPath": "src/TeachingBubble",
            "documentation": {
              "path": "src/TeachingBubble/TeachingBubble.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/TeachingBubble/TeachingBubble.jsx"
            },
            "presets": [
              {
                "path": "src/TeachingBubble/presets/0-default.jsx"
              }
            ]
          },
          "name": "TeachingBubble",
          "presets": [
            {
              "elements": {
                "teachingBubble1": {
                  "name": "TeachingBubble",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "teachingBubble1"
            }
          ],
          "properties": [
            {
              "customDescription": "Whether to display the TeachingBubble",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "open",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The control's title text",
              "customName": "Headline",
              "defaultValue": {
                "value": "Basic TeachingBubble"
              },
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The main message text",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 5
                }
              },
              "defaultValue": {
                "value": "Set my 'open' property to true to view me in a mockup."
              },
              "description": "",
              "isRequired": false,
              "name": "text",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Footer text to display in the bottom left corner.",
              "defaultValue": {
                "value": ""
              },
              "description": "",
              "isRequired": false,
              "name": "footerText",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The displayed text on the Primary Button. Remove text to hide button.",
              "customName": "Text: Primary Button",
              "defaultValue": {
                "value": "Next"
              },
              "description": "",
              "isRequired": false,
              "name": "primaryButtonLabel",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library (Optional)",
              "customName": "Icon: Primary Button",
              "description": "",
              "isRequired": false,
              "name": "primaryButtonIcon",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The displayed text on the Secondary Button. Remove text to hide button.",
              "customName": "Text: Secondary Button",
              "defaultValue": {
                "value": "Close"
              },
              "description": "",
              "isRequired": false,
              "name": "secondaryButtonLabel",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The exact name from the PayPal icon library (Optional)",
              "customName": "Icon: Secondary Button",
              "defaultValue": {
                "value": "Close"
              },
              "description": "",
              "isRequired": false,
              "name": "secondaryButtonIcon",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether to display the Close button",
              "customName": "Show Close Button",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "hasCloseButton",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The control's display direction",
              "customName": "Hint Direction",
              "defaultValue": {
                "value": "bottomAutoEdge"
              },
              "description": "",
              "isRequired": false,
              "name": "direction",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "topLeftEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "topCenter"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "topRightEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "topAutoEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottomLeftEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottomCenter"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottomRightEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottomAutoEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "leftTopEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "leftCenter"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "leftBottomEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "rightTopEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "rightCenter"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "rightBottomEdge"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "Fires when the Close button is clicked",
              "customName": "Close Button Click",
              "description": "",
              "isRequired": false,
              "name": "dismiss",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether to show the light blue target marker on the canvas",
              "customName": "Show Marker",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "showMarker",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the Primary Button is clicked on",
              "customName": "Primary Button Click",
              "description": "",
              "isRequired": false,
              "name": "primaryButtonClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the Secondary Button is clicked on",
              "customName": "Secondary Button Click",
              "description": "",
              "isRequired": false,
              "name": "secondaryButtonClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        }
      ],
      "name": "Notification & Engagement"
    },
    {
      "components": [
        {
          "documentation": {
            "examples": [
              {
                "code": "<ProgressIndicator />"
              }
            ]
          },
          "info": {
            "dirPath": "src/ProgressIndicator",
            "documentation": {
              "path": "src/ProgressIndicator/ProgressIndicator.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/ProgressIndicator/ProgressIndicator.jsx"
            },
            "presets": [
              {
                "path": "src/ProgressIndicator/presets/0-default.jsx"
              }
            ]
          },
          "name": "ProgressIndicator",
          "presets": [
            {
              "elements": {
                "progressIndicator1": {
                  "name": "ProgressIndicator",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "progressIndicator1"
            }
          ],
          "properties": [
            {
              "customDescription": "Reflect the control's role in the UI with its visual style",
              "customName": "Role",
              "defaultValue": {
                "value": "Default"
              },
              "description": "",
              "isRequired": false,
              "name": "status",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "Default"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "Success"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "Warning"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "Error"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "The description text to reflect the percent complete.",
              "customName": "Description",
              "defaultValue": {
                "value": "Progress info"
              },
              "description": "",
              "isRequired": false,
              "name": "descriptionText",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Use a value between 0 - 1.0",
              "customName": "Percent",
              "defaultValue": {
                "value": "0.5"
              },
              "description": "",
              "isRequired": false,
              "name": "percent",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "To display in indeterminate mode rather than show a percent",
              "customName": "Indeterminate",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "indeterminate",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<Spinner />"
              }
            ]
          },
          "info": {
            "dirPath": "src/Spinner",
            "documentation": {
              "path": "src/Spinner/Spinner.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Spinner/Spinner.jsx"
            },
            "presets": [
              {
                "path": "src/Spinner/presets/0-default.jsx"
              }
            ]
          },
          "name": "Spinner",
          "presets": [
            {
              "elements": {
                "spinner1": {
                  "name": "Spinner",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "spinner1"
            }
          ],
          "properties": [
            {
              "customDescription": "The label value to display next to the Spinner (optional)",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 2
                }
              },
              "defaultValue": {
                "value": "One moment..."
              },
              "description": "",
              "isRequired": false,
              "name": "label",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The display size of the Spinner",
              "defaultValue": {
                "value": "medium"
              },
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "xSmall"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "small"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "medium"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "large"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "Possible locations of the label in regards to the spinner",
              "customName": "Label Position",
              "defaultValue": {
                "value": "bottom"
              },
              "description": "Send this value as a string. Don't send it as an enum, which would cause terminal errors.",
              "isRequired": false,
              "name": "labelPosition",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "top"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "right"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottom"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "left"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "wrappers": []
        }
      ],
      "name": "Progress"
    },
    {
      "components": [
        {
          "documentation": {
            "examples": [
              {
                "code": "<Dialog />"
              }
            ]
          },
          "info": {
            "dirPath": "src/Dialog",
            "documentation": {
              "path": "src/Dialog/Dialog.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Dialog/Dialog.jsx"
            },
            "presets": [
              {
                "path": "src/Dialog/presets/0-default.jsx"
              }
            ]
          },
          "name": "Dialog",
          "presets": [
            {
              "elements": {
                "dialog1": {
                  "name": "Dialog",
                  "props": {
                    "style": {
                      "height": "100px",
                      "width": "100px"
                    }
                  }
                }
              },
              "name": "default",
              "rootId": "dialog1"
            }
          ],
          "properties": [
            {
              "customDescription": "Whether to display the Dialog",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "show",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The control's title text",
              "customName": "Headline",
              "defaultValue": {
                "value": "Basic Dialog"
              },
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The main message text",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 6
                }
              },
              "defaultValue": {
                "value": "Place the dialog marker off screen. Using another control like a Button, set the 'open' property to True to show it a mockup."
              },
              "description": "",
              "isRequired": false,
              "name": "text",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether the user may drag around the dialog",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "draggable",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether the user may click off the dialog to dismiss it, or must click on a button instead",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "blocking",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether the to show a dark overlay while the dialog is displayed",
              "customName": "Dark Overlay",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "darkOverlay",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The displayed text on the Primary Button. Remove text to hide button.",
              "customName": "Primary Button Text",
              "defaultValue": {
                "value": "OK"
              },
              "description": "",
              "isRequired": false,
              "name": "primaryButtonLabel",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The displayed text on the Secondary Button. Remove text to hide button.",
              "customName": "Secondary Button Text",
              "defaultValue": {
                "value": "Close"
              },
              "description": "",
              "isRequired": false,
              "name": "secondaryButtonLabel",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the dialog is dismissed any way EXCEPT clicking on the Primary or Secondary buttons",
              "customName": "Dismissed",
              "description": "",
              "isRequired": false,
              "name": "dismiss",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the Primary Button is clicked on",
              "customName": "Primary Button Click",
              "description": "",
              "isRequired": false,
              "name": "primaryButtonClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            },
            {
              "customDescription": "Fires when the Secondary Button is clicked on",
              "customName": "Secondary Button Click",
              "description": "",
              "isRequired": false,
              "name": "secondaryButtonClick",
              "type": {
                "name": "func",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<Tooltip />"
              }
            ]
          },
          "info": {
            "dirPath": "src/Tooltip",
            "documentation": {
              "path": "src/Tooltip/Tooltip.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Tooltip/Tooltip.jsx"
            },
            "presets": [
              {
                "path": "src/Tooltip/presets/0-default.jsx"
              }
            ]
          },
          "name": "Tooltip",
          "presets": [
            {
              "elements": {
                "tooltip1": {
                  "name": "Tooltip",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "tooltip1"
            }
          ],
          "properties": [
            {
              "customDescription": "Whether to display the Tooltlip",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "open",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Whether to show the 'beak' (or tip) of the Tooltlip",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "showBeak",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "The main message text",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 3
                }
              },
              "defaultValue": {
                "value": "I'm a basic tooltip"
              },
              "description": "",
              "isRequired": false,
              "name": "text",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The control's display direction",
              "customName": "Hint Direction",
              "defaultValue": {
                "value": "bottomAutoEdge"
              },
              "description": "",
              "isRequired": false,
              "name": "direction",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "topLeftEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "topCenter"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "topRightEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "topAutoEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottomLeftEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottomCenter"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottomRightEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "bottomAutoEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "leftTopEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "leftCenter"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "leftBottomEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "rightTopEdge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "rightCenter"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "rightBottomEdge"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "Whether to show the light blue target marker on the canvas",
              "customName": "Show Marker",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "showMarker",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        }
      ],
      "name": "Surfaces"
    },
    {
      "components": [
        {
          "documentation": {
            "examples": [
              {
                "code": "<Text />"
              }
            ]
          },
          "info": {
            "dirPath": "src/Text",
            "documentation": {
              "path": "src/Text/Text.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Text/Text.jsx"
            },
            "presets": [
              {
                "path": "src/Text/presets/0-default.jsx"
              }
            ]
          },
          "name": "Text",
          "presets": [
            {
              "elements": {
                "text1": {
                  "name": "Text",
                  "props": {
                    "style": {
                      "height": "100%"
                    }
                  }
                }
              },
              "name": "default",
              "rootId": "text1"
            }
          ],
          "properties": [
            {
              "customDescription": "The text value to display",
              "customType": {
                "name": "textfield",
                "structure": {
                  "rows": 6
                }
              },
              "defaultValue": {
                "value": "The quick brown fox jumped over the lazy dog."
              },
              "description": "",
              "isRequired": false,
              "name": "value",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The display size, corresponding to a Microsoft Text 'Variant'",
              "defaultValue": {
                "value": "medium"
              },
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": {
                "name": "union",
                "structure": {
                  "elements": [
                    {
                      "name": "literal",
                      "structure": {
                        "value": "tiny"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "xSmall"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "small"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "smallPlus"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "medium"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "mediumPlus"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "large"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "xLarge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "xxLarge"
                      }
                    },
                    {
                      "name": "literal",
                      "structure": {
                        "value": "mega"
                      }
                    }
                  ]
                }
              }
            },
            {
              "customDescription": "To apply bold formatting",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "bold",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "To apply italic formatting",
              "defaultValue": {
                "value": false
              },
              "description": "",
              "isRequired": false,
              "name": "italic",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "To allow text wrapping",
              "customName": "Wrap Text",
              "defaultValue": {
                "value": true
              },
              "description": "",
              "isRequired": false,
              "name": "wrap",
              "type": {
                "name": "boolean",
                "structure": {}
              }
            },
            {
              "customDescription": "Specify a color using the PayPal UI color values, such as 'grey-700'",
              "defaultValue": {
                "value": "grey-700"
              },
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": {
                "name": "string",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        },
        {
          "documentation": {
            "examples": [
              {
                "code": "<Icon />"
              }
            ]
          },
          "info": {
            "dirPath": "src/Icon",
            "documentation": {
              "path": "src/Icon/Icon.md"
            },
            "implementation": {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/Icon/Icon.jsx"
            },
            "presets": [
              {
                "path": "src/Icon/presets/0-default.jsx"
              }
            ]
          },
          "name": "Icon",
          "presets": [
            {
              "elements": {
                "icon1": {
                  "name": "Icon",
                  "props": {}
                }
              },
              "name": "default",
              "rootId": "icon1"
            }
          ],
          "properties": [
            {
              "customDescription": "The exact name from the PayPal icon library (Optional)",
              "customName": "Icon Name",
              "defaultValue": {
                "value": "Home"
              },
              "description": "",
              "isRequired": false,
              "name": "iconName",
              "type": {
                "name": "string",
                "structure": {}
              }
            },
            {
              "customDescription": "The size to use for the width and height",
              "defaultValue": {
                "value": 50
              },
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": {
                "name": "number",
                "structure": {}
              }
            },
            {
              "customDescription": "Use a PayPal UI color token, such as 'blue-600' or 'black', or a standard Hex Color, such as '#0070BA'",
              "defaultValue": {
                "value": "grey-700"
              },
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": {
                "name": "string",
                "structure": {}
              }
            }
          ],
          "wrappers": []
        }
      ],
      "name": "Utilities"
    }
  ],
  "name": "MS Fabric UXPin Merge",
  "vcs": {
    "branchName": "sc",
    "commitHash": "4ec29229f05a74ebdc1aecc2996a7aa14053bbc3"
  }
}
